1)What happens when you initialize a repository? Why do you need to do it?

Ans:When we initialize a git repository, git adds a folder named .git within the directory 
    in which it is initialized.
	We need to do this to start recording revision of the files within the directory.
	In this way git help us to track the changes in the files.  


2)How is the staging area different from the working directory and the repository?
What value do you think it offers?

Ans:Staging area acts as a buffer in between the working directory and actual commited files to the repository.
    It allows us to check whether all the changes required to be commited or not ,or even if required then whether all the changes need to 
    be commited in a single commit or several different commits. 

3)How can you use the staging area to make sure you have one commit per logical
 change?
Ans: We can use the 'git diff' command without argument to compare files from the working directory and staging area and also
     'git diff --staged' command to compare the files from staging area and the most recent commit.This two comparision will help the user to make
     sure that they were commiting per logical change. 
What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
